version: "3.8"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: iotgo
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - iotgo-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      # Use production mode for Beego
      - RUNMODE=prod
      # Database connection details, using the service name 'db' as the host
      - DB_HOST=db # Corresponds to getEnv("DB_HOST", "localhost")
      - DB_USER=postgres # Corresponds to getEnv("DB_USER", "postgres")
      - DB_PASSWORD=postgres # Corresponds to getEnv("DB_PASSWORD", "postgres")
      - DB_NAME=iotgo # Corresponds to getEnv("DB_NAME", "iotgo")
      - DB_PORT=5432 # Corresponds to getEnv("DB_PORT", "5432")
      # IMPORTANT: Replace with a strong, random secret for session encryption
      - SESSION_SECRET=your-secure-session-secret-here
      # IMPORTANT: Replace with a strong, random secret for JWT signing
      - JWT_SECRET_KEY=your-secure-jwt-secret-key-here
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - iotgo-network

  frontend:
    build:
      context: ./react-frontend
      dockerfile: Dockerfile
    environment:
      - API_URL=http://backend:8080
      - AUTH_URL=http://backend:8080
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - iotgo-network

volumes:
  postgres-data:

networks:
  iotgo-network:
    driver: bridge
