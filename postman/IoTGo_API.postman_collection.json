{
    "info": {
        "_postman_id": "a8e24f43-d6b7-4a82-b5c7-3e6f5b6d61b0",
        "name": "IoTGo API",
        "description": "Collection for the IoTGo API endpoints",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Login",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"username\": \"admin\",\n    \"password\": \"password\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/auth/login",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "auth",
                                "login"
                            ]
                        },
                        "description": "Authenticate user and get session"
                    },
                    "response": []
                },
                {
                    "name": "Get Current User",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/auth/me",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "auth",
                                "me"
                            ]
                        },
                        "description": "Get information about the currently logged-in user"
                    },
                    "response": []
                },
                {
                    "name": "Logout",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/auth/logout",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "auth",
                                "logout"
                            ]
                        },
                        "description": "Log out and clear session"
                    },
                    "response": []
                }
            ],
            "description": "Authentication endpoints for login/logout and session management"
        },
        {
            "name": "Users",
            "item": [
                {
                    "name": "Get All Users",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/users?limit=10&offset=0",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "users"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "10"
                                },
                                {
                                    "key": "offset",
                                    "value": "0"
                                }
                            ]
                        },
                        "description": "Get all users with pagination"
                    },
                    "response": []
                },
                {
                    "name": "Get User by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/users/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "users",
                                "1"
                            ]
                        },
                        "description": "Get a specific user by ID"
                    },
                    "response": []
                },
                {
                    "name": "Create User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"Username\": \"newuser\",\n    \"Email\": \"newuser@example.com\",\n    \"Password\": \"password123\",\n    \"FirstName\": \"New\",\n    \"LastName\": \"User\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/users",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "users"
                            ]
                        },
                        "description": "Create a new user"
                    },
                    "response": []
                },
                {
                    "name": "Update User",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"Email\": \"updated@example.com\",\n    \"FirstName\": \"Updated\",\n    \"LastName\": \"User\",\n    \"Password\": \"newpassword123\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/users/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "users",
                                "1"
                            ]
                        },
                        "description": "Update an existing user"
                    },
                    "response": []
                },
                {
                    "name": "Delete User",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/users/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "users",
                                "1"
                            ]
                        },
                        "description": "Delete a user"
                    },
                    "response": []
                }
            ],
            "description": "User management endpoints"
        },
        {
            "name": "Devices",
            "item": [
                {
                    "name": "Get All Devices",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/devices?limit=10&offset=0&query=status:active",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "devices"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "10"
                                },
                                {
                                    "key": "offset",
                                    "value": "0"
                                },
                                {
                                    "key": "query",
                                    "value": "status:active"
                                },
                                {
                                    "key": "fields",
                                    "value": "Id,Name,Status",
                                    "disabled": true
                                },
                                {
                                    "key": "sortby",
                                    "value": "CreatedAt",
                                    "disabled": true
                                },
                                {
                                    "key": "order",
                                    "value": "desc",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "Get all devices with filtering, pagination and sorting"
                    },
                    "response": []
                },
                {
                    "name": "Get Device by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/devices/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "devices",
                                "1"
                            ]
                        },
                        "description": "Get a specific device by ID"
                    },
                    "response": []
                },
                {
                    "name": "Create Device",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"Name\": \"New Device\",\n    \"SerialNumber\": \"SN12345678\",\n    \"Model\": \"Model X\",\n    \"Manufacturer\": \"ACME Inc\",\n    \"FirmwareVersion\": \"1.0.0\",\n    \"Status\": \"active\",\n    \"Location\": \"Building A, Room 101\",\n    \"ConnectionInfo\": {\n        \"IP\": \"192.168.1.100\",\n        \"Port\": 8080,\n        \"Protocol\": \"http\"\n    },\n    \"Tags\": [\"sensor\", \"temperature\", \"building-a\"]\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/devices",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "devices"
                            ]
                        },
                        "description": "Create a new device"
                    },
                    "response": []
                },
                {
                    "name": "Update Device",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"Name\": \"Updated Device\",\n    \"Status\": \"inactive\",\n    \"FirmwareVersion\": \"1.0.1\",\n    \"Tags\": [\"sensor\", \"temperature\", \"building-b\"]\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/devices/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "devices",
                                "1"
                            ]
                        },
                        "description": "Update an existing device"
                    },
                    "response": []
                },
                {
                    "name": "Delete Device",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/devices/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "devices",
                                "1"
                            ]
                        },
                        "description": "Delete a device"
                    },
                    "response": []
                }
            ],
            "description": "Device management endpoints"
        },
        {
            "name": "Integrations",
            "item": [
                {
                    "name": "Get All Integrations",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/integrations?limit=10&offset=0",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "integrations"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "10"
                                },
                                {
                                    "key": "offset",
                                    "value": "0"
                                },
                                {
                                    "key": "query",
                                    "value": "type:mqtt",
                                    "disabled": true
                                },
                                {
                                    "key": "fields",
                                    "value": "Id,Name,Type",
                                    "disabled": true
                                },
                                {
                                    "key": "sortby",
                                    "value": "CreatedAt",
                                    "disabled": true
                                },
                                {
                                    "key": "order",
                                    "value": "desc",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "Get all integrations with filtering, pagination and sorting"
                    },
                    "response": []
                },
                {
                    "name": "Get Integration by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/integrations/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "integrations",
                                "1"
                            ]
                        },
                        "description": "Get a specific integration by ID"
                    },
                    "response": []
                },
                {
                    "name": "Create Integration",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"Name\": \"New MQTT Integration\",\n    \"Type\": \"mqtt\",\n    \"Description\": \"MQTT broker integration\",\n    \"Status\": \"active\",\n    \"Config\": {\n        \"broker\": \"mqtt.example.com\",\n        \"port\": 1883,\n        \"username\": \"mqttuser\",\n        \"password\": \"mqttpass\",\n        \"topic_prefix\": \"iotgo/\"\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/integrations",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "integrations"
                            ]
                        },
                        "description": "Create a new integration"
                    },
                    "response": []
                },
                {
                    "name": "Update Integration",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"Name\": \"Updated MQTT Integration\",\n    \"Status\": \"inactive\",\n    \"Config\": {\n        \"broker\": \"mqtt.example.com\",\n        \"port\": 1883,\n        \"username\": \"newuser\",\n        \"password\": \"newpass\",\n        \"topic_prefix\": \"iotgo/updated/\"\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/integrations/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "integrations",
                                "1"
                            ]
                        },
                        "description": "Update an existing integration"
                    },
                    "response": []
                },
                {
                    "name": "Delete Integration",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/integrations/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "integrations",
                                "1"
                            ]
                        },
                        "description": "Delete an integration"
                    },
                    "response": []
                }
            ],
            "description": "Integration management endpoints"
        },
        {
            "name": "Snapshots",
            "item": [
                {
                    "name": "Get All Snapshots",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/snapshots?limit=10&offset=0",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "snapshots"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "10"
                                },
                                {
                                    "key": "offset",
                                    "value": "0"
                                },
                                {
                                    "key": "query",
                                    "value": "device_id:1",
                                    "disabled": true
                                },
                                {
                                    "key": "fields",
                                    "value": "Id,DeviceId,Timestamp",
                                    "disabled": true
                                },
                                {
                                    "key": "sortby",
                                    "value": "Timestamp",
                                    "disabled": true
                                },
                                {
                                    "key": "order",
                                    "value": "desc",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "Get all snapshots with filtering, pagination and sorting"
                    },
                    "response": []
                },
                {
                    "name": "Get Snapshot by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/snapshots/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "snapshots",
                                "1"
                            ]
                        },
                        "description": "Get a specific snapshot by ID"
                    },
                    "response": []
                },
                {
                    "name": "Create Snapshot",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"DeviceId\": 1,\n    \"Timestamp\": \"2023-09-28T14:30:00Z\",\n    \"Data\": {\n        \"temperature\": 25.5,\n        \"humidity\": 60,\n        \"pressure\": 1013.2\n    },\n    \"Tags\": [\"temperature\", \"humidity\", \"pressure\"]\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/snapshots",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "snapshots"
                            ]
                        },
                        "description": "Create a new snapshot"
                    },
                    "response": []
                },
                {
                    "name": "Update Snapshot",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"Data\": {\n        \"temperature\": 26.5,\n        \"humidity\": 62,\n        \"pressure\": 1014.2\n    },\n    \"Tags\": [\"temperature\", \"humidity\", \"pressure\", \"updated\"]\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/snapshots/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "snapshots",
                                "1"
                            ]
                        },
                        "description": "Update an existing snapshot"
                    },
                    "response": []
                },
                {
                    "name": "Delete Snapshot",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/snapshots/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "snapshots",
                                "1"
                            ]
                        },
                        "description": "Delete a snapshot"
                    },
                    "response": []
                }
            ],
            "description": "Snapshot management endpoints"
        },
        {
            "name": "Error Logs",
            "item": [
                {
                    "name": "Get All Error Logs",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/error_logs?limit=10&offset=0",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "error_logs"
                            ],
                            "query": [
                                {
                                    "key": "limit",
                                    "value": "10"
                                },
                                {
                                    "key": "offset",
                                    "value": "0"
                                },
                                {
                                    "key": "query",
                                    "value": "severity:error",
                                    "disabled": true
                                },
                                {
                                    "key": "fields",
                                    "value": "Id,Timestamp,Message",
                                    "disabled": true
                                },
                                {
                                    "key": "sortby",
                                    "value": "Timestamp",
                                    "disabled": true
                                },
                                {
                                    "key": "order",
                                    "value": "desc",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "Get all error logs with filtering, pagination and sorting"
                    },
                    "response": []
                },
                {
                    "name": "Get Error Log by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/error_logs/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "error_logs",
                                "1"
                            ]
                        },
                        "description": "Get a specific error log by ID"
                    },
                    "response": []
                },
                {
                    "name": "Create Error Log",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"Source\": \"device-manager\",\n    \"Severity\": \"error\",\n    \"Message\": \"Failed to connect to device\",\n    \"DeviceId\": 1,\n    \"Details\": {\n        \"error_code\": \"CONNECTION_TIMEOUT\",\n        \"retry_count\": 3\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/error_logs",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "error_logs"
                            ]
                        },
                        "description": "Create a new error log"
                    },
                    "response": []
                },
                {
                    "name": "Update Error Log",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"Severity\": \"warning\",\n    \"Details\": {\n        \"error_code\": \"CONNECTION_TIMEOUT\",\n        \"retry_count\": 5,\n        \"resolution\": \"Issue resolved after system restart\"\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/error_logs/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "error_logs",
                                "1"
                            ]
                        },
                        "description": "Update an existing error log"
                    },
                    "response": []
                },
                {
                    "name": "Delete Error Log",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/error_logs/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "error_logs",
                                "1"
                            ]
                        },
                        "description": "Delete an error log"
                    },
                    "response": []
                }
            ],
            "description": "Error log management endpoints"
        },
        {
            "name": "Roles",
            "item": [
                {
                    "name": "Get All Roles",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/roles",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "roles"
                            ]
                        },
                        "description": "Get all roles"
                    },
                    "response": []
                },
                {
                    "name": "Get Role by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/roles/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "roles",
                                "1"
                            ]
                        },
                        "description": "Get a specific role by ID"
                    },
                    "response": []
                },
                {
                    "name": "Create Role",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"Name\": \"device-operator\",\n    \"Description\": \"Can operate devices but not modify settings\",\n    \"AccessMode\": \"read\",\n    \"ResourceType\": \"device\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/roles",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "roles"
                            ]
                        },
                        "description": "Create a new role"
                    },
                    "response": []
                },
                {
                    "name": "Update Role",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"Description\": \"Can operate devices and modify basic settings\",\n    \"AccessMode\": \"write\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api/v1/roles/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "roles",
                                "1"
                            ]
                        },
                        "description": "Update an existing role"
                    },
                    "response": []
                },
                {
                    "name": "Delete Role",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/roles/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "roles",
                                "1"
                            ]
                        },
                        "description": "Delete a role"
                    },
                    "response": []
                },
                {
                    "name": "Assign Role to User",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/roles/users/1/roles/2",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "roles",
                                "users",
                                "1",
                                "roles",
                                "2"
                            ]
                        },
                        "description": "Assign a role to a user"
                    },
                    "response": []
                },
                {
                    "name": "Remove Role from User",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/roles/users/1/roles/2",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "roles",
                                "users",
                                "1",
                                "roles",
                                "2"
                            ]
                        },
                        "description": "Remove a role from a user"
                    },
                    "response": []
                },
                {
                    "name": "Get User Roles",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{base_url}}/api/v1/roles/users/1/roles",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "roles",
                                "users",
                                "1",
                                "roles"
                            ]
                        },
                        "description": "Get all roles assigned to a user"
                    },
                    "response": []
                }
            ],
            "description": "Role management endpoints"
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variable": [
        {
            "key": "base_url",
            "value": "http://localhost:8080",
            "type": "string",
            "description": "Base URL for the API"
        }
    ]
}
